[{"/home/bt66/belajar/react/amikom-presensi/src/index.js":"1","/home/bt66/belajar/react/amikom-presensi/src/reportWebVitals.js":"2","/home/bt66/belajar/react/amikom-presensi/src/App.js":"3","/home/bt66/belajar/react/amikom-presensi/src/components/Header.js":"4","/home/bt66/belajar/react/amikom-presensi/src/pages/presensi/Presensi.js":"5","/home/bt66/belajar/react/amikom-presensi/src/pages/presensi/ListNim.js":"6","/home/bt66/belajar/react/amikom-presensi/src/pages/presensi/Notification.js":"7"},{"size":549,"mtime":1665482525938,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1665185456444,"results":"10","hashOfConfig":"9"},{"size":294,"mtime":1665326382382,"results":"11","hashOfConfig":"9"},{"size":417,"mtime":1665188613588,"results":"12","hashOfConfig":"9"},{"size":7431,"mtime":1665618674716,"results":"13","hashOfConfig":"9"},{"size":532,"mtime":1665235321234,"results":"14","hashOfConfig":"9"},{"size":422,"mtime":1665324165001,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ekvmv1",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bt66/belajar/react/amikom-presensi/src/index.js",[],[],"/home/bt66/belajar/react/amikom-presensi/src/reportWebVitals.js",[],[],[],"/home/bt66/belajar/react/amikom-presensi/src/App.js",[],[],"/home/bt66/belajar/react/amikom-presensi/src/components/Header.js",[],[],"/home/bt66/belajar/react/amikom-presensi/src/pages/presensi/Presensi.js",["40","41"],[],"import Header from \"../../components/Header\";\nimport React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\nimport classes from \"./Presensi.module.scss\";\nimport Notification from \"./Notification\";\nimport axios from \"axios\";\n\nconst PresensiPage = () => {\n    const [data, setData] = useState('No result');\n    const [dataMHS, setdataMHS] = useState({\n        formData: \"\",\n        nim: []\n    })\n    const [notification, setNotification] = useState({\n        showNotification: false,\n        msg: []\n    })\n    function handleClear(e) {\n        e.preventDefault();\n        setData('No result');\n    }\n    const handleSubmit = (event) => {\n        console.log(\"submitted\")\n        event.preventDefault();\n        console.log(dataMHS);\n        setdataMHS({\n            nim: [...dataMHS.nim, dataMHS.formData],\n            formData: \"\"\n        })\n        // setdataMHS({\n        //     formData: \"\"\n        // })\n    }\n    const handleChange = (event) => {\n        // event.preventDefault();\n        setdataMHS({\n            formData: event.target.value,\n            nim: [...dataMHS.nim]\n        })\n        console.log(event.target.value)\n        // setdataMHS({\n        //     nim: [...dataMHS.nim, event.target.value]\n        // })\n    }\n\n    // request to presensi rest API\n    const presensi = (event) => {\n        event.preventDefault();\n        // console.log(notification.msg)\n        setNotification({\n            showNotification: false,\n            msg: [...notification.msg]\n        })\n        dataMHS.nim.map((npm, index) => {\n            axios.post('https://dev-backend-pr.tranto.tk/',{\n                qrData:`${data}`,\n                nim: `${npm}`\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((resp => {\n                // console.log('ini response')\n                // console.log(resp)\n                setNotification({\n                    showNotification: true,\n                    msg: [...notification.msg, resp.status]\n                })\n            })\n            ).catch((error) => {\n                // console.log(error.response.status)\n                setNotification({\n                    showNotification: true,\n                    msg: [...notification.msg, error.response.status]\n                })\n            })\n            // .then(resp => {\n            //     console.log(resp.status)\n            //     console.log(resp.data)\n            //     console.log('ini response')\n            //     console.log(resp)\n            //     setNotification({\n            //         showNotification: true,\n            //         msg: [...notification.msg, resp.status]\n            //     })\n            //     console.log(notification.msg)\n            // }).catch(error){\n\n            // }\n        })\n            // fetch('https://dev-backend-pr.tranto.tk/', {\n            //     method: 'POST',\n            //     // mode: 'no-cors',\n            //     referrerPolicy: 'no-referrer',\n            //     headers: {\n            //         'User-Agent': '@m!k0mXv=#neMob!le',\n            //         'Content-Type': 'application/json' \n            //     },\n            //     body: JSON.stringify({\n            //         data:`${data};${npm}`,\n            //         location: 'Amikom'\n            //     })\n            // }).then(resp => {\n            //     console.log(resp.status)\n            //     console.log(resp.body)\n            //     console.log(resp)\n            //     setNotification({\n            //         showNotification: true,\n            //         msg: [...notification.msg, resp.status]\n            //     })\n            //     // new Promise((resolve) => {\n            //     //     setTimeout(resolve, 5000)\n            //     //     setNotification({\n            //     //         showNotification: false\n            //     //     })\n            //     // })\n            //     // console.log(notification)\n            // })\n            \n        \n\n        // console.log(`akhir ${notification.msg}`)\n        setTimeout(() => {\n            setNotification({\n                showNotification: false,\n                msg: []\n            });\n        }, 5000);\n    }\n\n\n    return(\n        <div className={classes.content}>\n            <Header/>\n            { notification.showNotification &&\n                <div className={classes.content__notification}>\n                    {notification.msg.map((message, index) => {\n                        // console.log(message)\n                    })}\n                    <Notification msg={notification.msg}/>\n                </div>\n            }\n            {/* { notification.showNotification &&\n                <div className={classes.content__notification}>\n                    {\n                        notification.msg.map((message, index) => {\n                            <Notification key={index}  msg={message}/>\n                        })\n                    }\n                    \n                </div>\n            } */}\n            <div>\n                <QrReader\n                    onResult={(result, error) => {\n                    if (!!result) {\n                        setData(result?.text);\n                    }\n\n                    if (!!error) {\n                        console.info(error);\n                    }\n                    }}\n                    style={{ width: '100%'}}\n                    constraints={{\n                        facingMode: 'environment',\n                        zoom: 2\n                        // advanced: [{}]\n                    }}\n                />\n            </div>\n            <div className={classes.content__form}>\n                <p>Qrcode Data :</p>\n                <p className={classes.content__form__qrResult}>{data}</p>\n                <button onClick={handleClear} className={classes.btnDelete}>Clear QR Data</button>\n                <div>\n                    <p>Input your NIM : </p>    \n                    <form onSubmit={handleSubmit}>\n                        <input type=\"text\" \n                            name=\"nim\"\n                            value={dataMHS.formData}\n                            placeholder=\"nim\"\n                            onChange={handleChange}\n                            className={classes.inputForm}\n                        />\n                        <input type=\"submit\" className={classes.btnSubmit}/>\n                    </form>\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            {/* <th>No</th> */}\n                            <th>No</th>\n                            <th>NIM</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dataMHS.nim.map(( data, index) => \n                            <tr key={index}>\n                                <td>{index+1}</td>\n                                <td>{data}</td>\n                                <td><p>delete</p></td>\n                            </tr>\n                        )}\n                    </tbody>\n                    \n                </table>\n                <button onClick={presensi} className={classes.btnSubmit}>Presensi!</button>\n\n            </div>\n            \n            {/* <ListNim nimData={dataMHS.nim}/> */}\n        </div>\n    )\n}\n\nexport default PresensiPage","/home/bt66/belajar/react/amikom-presensi/src/pages/presensi/ListNim.js",["42"],[],"import React from 'react'\n\nconst ListNim = (props) => {\n    return (\n        <>\n            <table>\n                <tr>\n                    <th>No</th>\n                    <th>NIM</th>\n                    <th>Action</th>\n                </tr>\n                {props.nimData.map(( data, index) => {\n                    <tr key={index}>\n                        <td>{index}</td>\n                        <td>{data.nim}</td>\n                    </tr>\n                })}\n            </table>\n        </>\n    )\n}\n\nexport default ListNim\n","/home/bt66/belajar/react/amikom-presensi/src/pages/presensi/Notification.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":54,"column":38,"nodeType":"45","messageId":"46","endLine":54,"endColumn":40},{"ruleId":"43","severity":1,"message":"44","line":138,"column":60,"nodeType":"45","messageId":"46","endLine":138,"endColumn":62},{"ruleId":"43","severity":1,"message":"44","line":12,"column":51,"nodeType":"45","messageId":"46","endLine":12,"endColumn":53},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]